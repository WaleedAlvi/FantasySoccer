{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport { auth } from '../shared/firebase';\nexport default class UserStore {\n  constructor() {\n    this.user = null;\n    this.errorExists = false;\n    this.errorMessage = '';\n\n    this.login = (email, password) => {\n      return auth.signInWithEmailAndPassword(email, password);\n    };\n\n    this.signup = (email, password, confirmPassword) => {\n      if (password === confirmPassword) {\n        this.errorExists = false;\n        this.errorMessage = '';\n        return auth.createUserWithEmailAndPassword(email, password).then(() => {\n          this.setUser();\n        }).catch(error => {\n          this.errorExists = true;\n          this.errorMessage = error.message;\n        });\n      } else {\n        this.errorExists = true;\n        this.errorMessage = 'Passwords do not match';\n      }\n    };\n\n    this.signout = () => {\n      return auth.signOut();\n    };\n\n    makeAutoObservable(this);\n  }\n\n  get IsLoggedIn() {\n    return !!this.user;\n  }\n\n  setUser() {\n    auth.onAuthStateChanged(user => {\n      this.errorExists = false;\n      this.errorMessage = '';\n      this.user = {\n        name: '',\n        email: user === null || user === void 0 ? void 0 : user.email,\n        userToken: user === null || user === void 0 ? void 0 : user.uid\n      };\n    });\n  }\n\n}","map":{"version":3,"sources":["G:/Personal Projects/UntitledProject/untitled-project/src/app/stores/userStore.ts"],"names":["makeAutoObservable","auth","UserStore","constructor","user","errorExists","errorMessage","login","email","password","signInWithEmailAndPassword","signup","confirmPassword","createUserWithEmailAndPassword","then","setUser","catch","error","message","signout","signOut","IsLoggedIn","onAuthStateChanged","name","userToken","uid"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AAEA,SAASC,IAAT,QAAqB,oBAArB;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAM3BC,EAAAA,WAAW,GAAG;AAAA,SALdC,IAKc,GALO,IAKP;AAAA,SAJdC,WAIc,GAJS,KAIT;AAAA,SAHdC,YAGc,GAHS,EAGT;;AAAA,SAQdC,KARc,GAQN,CAACC,KAAD,EAAgBC,QAAhB,KAAqC;AAEzC,aAAOR,IAAI,CAACS,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAP;AACH,KAXa;;AAAA,SAadE,MAbc,GAaL,CAACH,KAAD,EAAgBC,QAAhB,EAAkCG,eAAlC,KAA6D;AAClE,UAAIH,QAAQ,KAAKG,eAAjB,EAAkC;AAC9B,aAAKP,WAAL,GAAmB,KAAnB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,eAAOL,IAAI,CAACY,8BAAL,CAAoCL,KAApC,EAA2CC,QAA3C,EACNK,IADM,CACD,MAAM;AACR,eAAKC,OAAL;AACH,SAHM,EAINC,KAJM,CAICC,KAAD,IAAW;AACd,eAAKZ,WAAL,GAAmB,IAAnB;AACA,eAAKC,YAAL,GAAoBW,KAAK,CAACC,OAA1B;AACH,SAPM,CAAP;AAQH,OAXD,MAWO;AACH,aAAKb,WAAL,GAAmB,IAAnB;AACA,aAAKC,YAAL,GAAoB,wBAApB;AACH;AACJ,KA7Ba;;AAAA,SA2Cda,OA3Cc,GA2CJ,MAAM;AACZ,aAAOlB,IAAI,CAACmB,OAAL,EAAP;AACH,KA7Ca;;AACVpB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEa,MAAVqB,UAAU,GAAG;AACb,WAAO,CAAC,CAAC,KAAKjB,IAAd;AACH;;AAyBDW,EAAAA,OAAO,GAAG;AACNd,IAAAA,IAAI,CAACqB,kBAAL,CAAwBlB,IAAI,IAAI;AAC5B,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKF,IAAL,GAAY;AACRmB,QAAAA,IAAI,EAAE,EADE;AAERf,QAAAA,KAAK,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,KAFL;AAGRgB,QAAAA,SAAS,EAAEpB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEqB;AAHT,OAAZ;AAKH,KARD;AASH;;AA/C0B","sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport { IUser } from '../models/user';\r\nimport { auth } from '../shared/firebase';\r\n\r\nexport default class UserStore {\r\n    user: IUser | null = null;\r\n    errorExists: boolean = false;\r\n    errorMessage: string = '';\r\n    \r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get IsLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = (email: string, password: string) => {\r\n\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    signup = (email: string, password: string, confirmPassword:string) => {\r\n        if (password === confirmPassword) {\r\n            this.errorExists = false;\r\n            this.errorMessage = '';\r\n            return auth.createUserWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setUser();\r\n            })\r\n            .catch((error) => {\r\n                this.errorExists = true;\r\n                this.errorMessage = error.message;\r\n            });\r\n        } else {\r\n            this.errorExists = true;\r\n            this.errorMessage = 'Passwords do not match';\r\n        }\r\n    }\r\n\r\n    setUser() {\r\n        auth.onAuthStateChanged(user => {\r\n            this.errorExists = false;\r\n            this.errorMessage = '';\r\n            this.user = {\r\n                name: '',\r\n                email: user?.email,\r\n                userToken: user?.uid\r\n            }\r\n        })\r\n    }\r\n\r\n    signout = () => {\r\n        return auth.signOut();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}