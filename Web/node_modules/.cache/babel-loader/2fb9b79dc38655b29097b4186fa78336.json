{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport { auth } from '../shared/firebase';\nexport default class UserStore {\n  constructor() {\n    this.user = null;\n\n    this.login = () => {};\n\n    this.signup = (email, password, confirmPassword) => {\n      if (password === confirmPassword) {\n        auth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n          console.log(userCredential);\n        });\n      } else {// send error message\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n  get IsLoggedIn() {\n    return !!this.user;\n  }\n\n}","map":{"version":3,"sources":["G:/Personal Projects/UntitledProject/untitled-project/src/app/stores/userStore.ts"],"names":["makeAutoObservable","auth","UserStore","constructor","user","login","signup","email","password","confirmPassword","createUserWithEmailAndPassword","then","userCredential","console","log","IsLoggedIn"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AAEA,SAASC,IAAT,QAAqB,oBAArB;AAEA,eAAe,MAAMC,SAAN,CAAgB;AAG3BC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc,GAFO,IAEP;;AAAA,SAQdC,KARc,GAQN,MAAM,CAEb,CAVa;;AAAA,SAYdC,MAZc,GAYL,CAACC,KAAD,EAAgBC,QAAhB,EAAkCC,eAAlC,KAA6D;AAClE,UAAID,QAAQ,KAAKC,eAAjB,EAAkC;AAC9BR,QAAAA,IAAI,CAACS,8BAAL,CAAoCH,KAApC,EAA2CC,QAA3C,EACCG,IADD,CACOC,cAAD,IAAoB;AACtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACP,SAHG;AAIH,OALD,MAKO,CACH;AACH;AAEJ,KAtBa;;AACVZ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAEa,MAAVe,UAAU,GAAG;AACb,WAAO,CAAC,CAAC,KAAKX,IAAd;AACH;;AAT0B","sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport { IUser } from '../models/user'\r\nimport { auth } from '../shared/firebase'\r\n\r\nexport default class UserStore {\r\n    user: IUser | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get IsLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = () => {\r\n\r\n    }\r\n\r\n    signup = (email: string, password: string, confirmPassword:string) => {\r\n        if (password === confirmPassword) {\r\n            auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                console.log(userCredential);\r\n        })\r\n        } else {\r\n            // send error message\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}